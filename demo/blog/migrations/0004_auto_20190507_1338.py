# Generated by Django 2.2.1 on 2019-05-07 00:49

import json
from django.db import migrations
import wagtail.core.fields
from wagtail.core.rich_text import RichText


def convert_data(apps, schema_editor):
    blog_page = apps.get_model('blog', 'BlogPage')
    for post in blog_page.objects.all():
        print('\n', post.title)
        # edit the live post
        if post.body.raw_text and not post.body:
            post.body = [('paragraph', RichText(post.body.raw_text))]
            print('Updated ' + post.title)
            post.save()

        # edit drafts associated with post
        if post.has_unpublished_changes:
            print(post.title + ' has drafts...')
            for rev in post.revisions.all():
                data = json.loads(rev.content_json)
                body = data['body']
                print(body)

                print('This is current JSON:', data, '\n')
                data['body'] = json.dumps([{
                    "type": "paragraph",
                    "value": body
                }])
                rev.content_json = json.dumps(data)
                print('This is updated JSON:', rev.content_json, '\n')

                rev.save()

        print('Completed ' + post.title + '.' + '\n')


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0003_blogpage_stream'),
    ]

    operations = [
        migrations.AlterField(
            model_name='blogpage',
            name='body',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.RichTextBlock())], blank=True),
        ),

        migrations.RunPython(convert_data),
    ]
